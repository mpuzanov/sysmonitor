// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.21.0
// 	protoc        v3.11.4
// source: sysmonitor.proto

//import "google/protobuf/timestamp.proto";
//import "google/protobuf/duration.proto";

package api

import (
	context "context"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// This is a compile-time assertion that a sufficiently up-to-date version
// of the legacy proto package is being used.
const _ = proto.ProtoPackageIsVersion4

// запрос к серверу от клиента
type Request struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// промежуток времени выдачи информации (в секундах)
	Timeout int32 `protobuf:"varint,1,opt,name=timeout,proto3" json:"timeout,omitempty"`
	// период времени за который выдавать информацию (в секундах)
	Period int32 `protobuf:"varint,2,opt,name=period,proto3" json:"period,omitempty"`
}

func (x *Request) Reset() {
	*x = Request{}
	if protoimpl.UnsafeEnabled {
		mi := &file_sysmonitor_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Request) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Request) ProtoMessage() {}

func (x *Request) ProtoReflect() protoreflect.Message {
	mi := &file_sysmonitor_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Request.ProtoReflect.Descriptor instead.
func (*Request) Descriptor() ([]byte, []int) {
	return file_sysmonitor_proto_rawDescGZIP(), []int{0}
}

func (x *Request) GetTimeout() int32 {
	if x != nil {
		return x.Timeout
	}
	return 0
}

func (x *Request) GetPeriod() int32 {
	if x != nil {
		return x.Period
	}
	return 0
}

type SystemResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// средняя загрузка системы
	SystemLoadValue float64 `protobuf:"fixed64,1,opt,name=system_load_value,json=systemLoadValue,proto3" json:"system_load_value,omitempty"`
}

func (x *SystemResponse) Reset() {
	*x = SystemResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_sysmonitor_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SystemResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SystemResponse) ProtoMessage() {}

func (x *SystemResponse) ProtoReflect() protoreflect.Message {
	mi := &file_sysmonitor_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SystemResponse.ProtoReflect.Descriptor instead.
func (*SystemResponse) Descriptor() ([]byte, []int) {
	return file_sysmonitor_proto_rawDescGZIP(), []int{1}
}

func (x *SystemResponse) GetSystemLoadValue() float64 {
	if x != nil {
		return x.SystemLoadValue
	}
	return 0
}

// средняя загрузка CPU
type CPUResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserMode   int32 `protobuf:"varint,1,opt,name=user_mode,json=userMode,proto3" json:"user_mode,omitempty"`
	SystemMode int32 `protobuf:"varint,2,opt,name=system_mode,json=systemMode,proto3" json:"system_mode,omitempty"`
	Idle       int32 `protobuf:"varint,3,opt,name=idle,proto3" json:"idle,omitempty"`
}

func (x *CPUResponse) Reset() {
	*x = CPUResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_sysmonitor_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CPUResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CPUResponse) ProtoMessage() {}

func (x *CPUResponse) ProtoReflect() protoreflect.Message {
	mi := &file_sysmonitor_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CPUResponse.ProtoReflect.Descriptor instead.
func (*CPUResponse) Descriptor() ([]byte, []int) {
	return file_sysmonitor_proto_rawDescGZIP(), []int{2}
}

func (x *CPUResponse) GetUserMode() int32 {
	if x != nil {
		return x.UserMode
	}
	return 0
}

func (x *CPUResponse) GetSystemMode() int32 {
	if x != nil {
		return x.SystemMode
	}
	return 0
}

func (x *CPUResponse) GetIdle() int32 {
	if x != nil {
		return x.Idle
	}
	return 0
}

type Result struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SystemVal *SystemResponse `protobuf:"bytes,1,opt,name=system_val,json=systemVal,proto3" json:"system_val,omitempty"`
	CpuVal    *CPUResponse    `protobuf:"bytes,2,opt,name=cpu_val,json=cpuVal,proto3" json:"cpu_val,omitempty"`
}

func (x *Result) Reset() {
	*x = Result{}
	if protoimpl.UnsafeEnabled {
		mi := &file_sysmonitor_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Result) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Result) ProtoMessage() {}

func (x *Result) ProtoReflect() protoreflect.Message {
	mi := &file_sysmonitor_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Result.ProtoReflect.Descriptor instead.
func (*Result) Descriptor() ([]byte, []int) {
	return file_sysmonitor_proto_rawDescGZIP(), []int{3}
}

func (x *Result) GetSystemVal() *SystemResponse {
	if x != nil {
		return x.SystemVal
	}
	return nil
}

func (x *Result) GetCpuVal() *CPUResponse {
	if x != nil {
		return x.CpuVal
	}
	return nil
}

var File_sysmonitor_proto protoreflect.FileDescriptor

var file_sysmonitor_proto_rawDesc = []byte{
	0x0a, 0x10, 0x73, 0x79, 0x73, 0x6d, 0x6f, 0x6e, 0x69, 0x74, 0x6f, 0x72, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x12, 0x03, 0x61, 0x70, 0x69, 0x22, 0x3b, 0x0a, 0x07, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x74, 0x69, 0x6d, 0x65, 0x6f, 0x75, 0x74, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x07, 0x74, 0x69, 0x6d, 0x65, 0x6f, 0x75, 0x74, 0x12, 0x16, 0x0a, 0x06,
	0x70, 0x65, 0x72, 0x69, 0x6f, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x70, 0x65,
	0x72, 0x69, 0x6f, 0x64, 0x22, 0x3c, 0x0a, 0x0e, 0x53, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x2a, 0x0a, 0x11, 0x73, 0x79, 0x73, 0x74, 0x65, 0x6d,
	0x5f, 0x6c, 0x6f, 0x61, 0x64, 0x5f, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x01, 0x52, 0x0f, 0x73, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x4c, 0x6f, 0x61, 0x64, 0x56, 0x61, 0x6c,
	0x75, 0x65, 0x22, 0x5f, 0x0a, 0x0b, 0x43, 0x50, 0x55, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x1b, 0x0a, 0x09, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x6d, 0x6f, 0x64, 0x65, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x75, 0x73, 0x65, 0x72, 0x4d, 0x6f, 0x64, 0x65, 0x12, 0x1f,
	0x0a, 0x0b, 0x73, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x5f, 0x6d, 0x6f, 0x64, 0x65, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x0a, 0x73, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x4d, 0x6f, 0x64, 0x65, 0x12,
	0x12, 0x0a, 0x04, 0x69, 0x64, 0x6c, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x69,
	0x64, 0x6c, 0x65, 0x22, 0x67, 0x0a, 0x06, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x12, 0x32, 0x0a,
	0x0a, 0x73, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x5f, 0x76, 0x61, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x13, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x53, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x52, 0x09, 0x73, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x56, 0x61,
	0x6c, 0x12, 0x29, 0x0a, 0x07, 0x63, 0x70, 0x75, 0x5f, 0x76, 0x61, 0x6c, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x10, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x43, 0x50, 0x55, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x52, 0x06, 0x63, 0x70, 0x75, 0x56, 0x61, 0x6c, 0x32, 0x36, 0x0a, 0x0a,
	0x53, 0x79, 0x73, 0x6d, 0x6f, 0x6e, 0x69, 0x74, 0x6f, 0x72, 0x12, 0x28, 0x0a, 0x07, 0x53, 0x79,
	0x73, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x0c, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x0b, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74,
	0x22, 0x00, 0x30, 0x01, 0x42, 0x05, 0x5a, 0x03, 0x61, 0x70, 0x69, 0x62, 0x06, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x33,
}

var (
	file_sysmonitor_proto_rawDescOnce sync.Once
	file_sysmonitor_proto_rawDescData = file_sysmonitor_proto_rawDesc
)

func file_sysmonitor_proto_rawDescGZIP() []byte {
	file_sysmonitor_proto_rawDescOnce.Do(func() {
		file_sysmonitor_proto_rawDescData = protoimpl.X.CompressGZIP(file_sysmonitor_proto_rawDescData)
	})
	return file_sysmonitor_proto_rawDescData
}

var file_sysmonitor_proto_msgTypes = make([]protoimpl.MessageInfo, 4)
var file_sysmonitor_proto_goTypes = []interface{}{
	(*Request)(nil),        // 0: api.Request
	(*SystemResponse)(nil), // 1: api.SystemResponse
	(*CPUResponse)(nil),    // 2: api.CPUResponse
	(*Result)(nil),         // 3: api.Result
}
var file_sysmonitor_proto_depIdxs = []int32{
	1, // 0: api.Result.system_val:type_name -> api.SystemResponse
	2, // 1: api.Result.cpu_val:type_name -> api.CPUResponse
	0, // 2: api.Sysmonitor.SysInfo:input_type -> api.Request
	3, // 3: api.Sysmonitor.SysInfo:output_type -> api.Result
	3, // [3:4] is the sub-list for method output_type
	2, // [2:3] is the sub-list for method input_type
	2, // [2:2] is the sub-list for extension type_name
	2, // [2:2] is the sub-list for extension extendee
	0, // [0:2] is the sub-list for field type_name
}

func init() { file_sysmonitor_proto_init() }
func file_sysmonitor_proto_init() {
	if File_sysmonitor_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_sysmonitor_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Request); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_sysmonitor_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SystemResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_sysmonitor_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CPUResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_sysmonitor_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Result); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_sysmonitor_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   4,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_sysmonitor_proto_goTypes,
		DependencyIndexes: file_sysmonitor_proto_depIdxs,
		MessageInfos:      file_sysmonitor_proto_msgTypes,
	}.Build()
	File_sysmonitor_proto = out.File
	file_sysmonitor_proto_rawDesc = nil
	file_sysmonitor_proto_goTypes = nil
	file_sysmonitor_proto_depIdxs = nil
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConnInterface

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion6

// SysmonitorClient is the client API for Sysmonitor service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type SysmonitorClient interface {
	SysInfo(ctx context.Context, in *Request, opts ...grpc.CallOption) (Sysmonitor_SysInfoClient, error)
}

type sysmonitorClient struct {
	cc grpc.ClientConnInterface
}

func NewSysmonitorClient(cc grpc.ClientConnInterface) SysmonitorClient {
	return &sysmonitorClient{cc}
}

func (c *sysmonitorClient) SysInfo(ctx context.Context, in *Request, opts ...grpc.CallOption) (Sysmonitor_SysInfoClient, error) {
	stream, err := c.cc.NewStream(ctx, &_Sysmonitor_serviceDesc.Streams[0], "/api.Sysmonitor/SysInfo", opts...)
	if err != nil {
		return nil, err
	}
	x := &sysmonitorSysInfoClient{stream}
	if err := x.ClientStream.SendMsg(in); err != nil {
		return nil, err
	}
	if err := x.ClientStream.CloseSend(); err != nil {
		return nil, err
	}
	return x, nil
}

type Sysmonitor_SysInfoClient interface {
	Recv() (*Result, error)
	grpc.ClientStream
}

type sysmonitorSysInfoClient struct {
	grpc.ClientStream
}

func (x *sysmonitorSysInfoClient) Recv() (*Result, error) {
	m := new(Result)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

// SysmonitorServer is the server API for Sysmonitor service.
type SysmonitorServer interface {
	SysInfo(*Request, Sysmonitor_SysInfoServer) error
}

// UnimplementedSysmonitorServer can be embedded to have forward compatible implementations.
type UnimplementedSysmonitorServer struct {
}

func (*UnimplementedSysmonitorServer) SysInfo(*Request, Sysmonitor_SysInfoServer) error {
	return status.Errorf(codes.Unimplemented, "method SysInfo not implemented")
}

func RegisterSysmonitorServer(s *grpc.Server, srv SysmonitorServer) {
	s.RegisterService(&_Sysmonitor_serviceDesc, srv)
}

func _Sysmonitor_SysInfo_Handler(srv interface{}, stream grpc.ServerStream) error {
	m := new(Request)
	if err := stream.RecvMsg(m); err != nil {
		return err
	}
	return srv.(SysmonitorServer).SysInfo(m, &sysmonitorSysInfoServer{stream})
}

type Sysmonitor_SysInfoServer interface {
	Send(*Result) error
	grpc.ServerStream
}

type sysmonitorSysInfoServer struct {
	grpc.ServerStream
}

func (x *sysmonitorSysInfoServer) Send(m *Result) error {
	return x.ServerStream.SendMsg(m)
}

var _Sysmonitor_serviceDesc = grpc.ServiceDesc{
	ServiceName: "api.Sysmonitor",
	HandlerType: (*SysmonitorServer)(nil),
	Methods:     []grpc.MethodDesc{},
	Streams: []grpc.StreamDesc{
		{
			StreamName:    "SysInfo",
			Handler:       _Sysmonitor_SysInfo_Handler,
			ServerStreams: true,
		},
	},
	Metadata: "sysmonitor.proto",
}
